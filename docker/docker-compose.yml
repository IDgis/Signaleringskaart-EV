version: '2'

services:
  nginx:
    container_name: proxy
    restart: always
    build: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_logs:/var/log/nginx
      - base_certs:/etc/nginx/certs:ro
      - base_html:/usr/share/nginx/html
      - base_vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      
  letsencrypt:
    container_name: letsencrypt
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.7
    volumes_from:
      - nginx
    volumes:
      - base_certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
  db:
    container_name: db-ov
    restart: always
    build: database
    environment:
      DEBUG: "false"
    volumes:
      - db_ov_data:/var/lib/postgresql/data    
      
  limesurvey:
    container_name: limesurvey-ov
    restart: always
    expose:
     - "80"
    environment:
      VIRTUAL_HOST: ${HOST_URL}
      LETSENCRYPT_HOST: ${HOST_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_MAIL}
    build: 
      context: limesurvey
      args:
        - WMSURL=${PROTOCOL}://${HOST_URL}/services/plangebied_wms_ov
        - TOETSSERVLETURL=${PROTOCOL}://${HOST_URL}/toets
        
  deegree:
    container_name: deegree-ov
    restart: always
    build: deegree
    depends_on:
      - db
    expose:
      - "8080" 

  backup:
    image: idgis/postgresql-backup
    restart: always
    environment:
      # format: $DB_HOST:$DB_PORT:$DB_NAME:$DB_USER:$DB_PASSWORD
      - DATABASE_0=db-ov:5432:ev_lime_ov:postgres:${DB_PG_PASSWORD}
      - DATABASE_1=db-ov:5432:ev_services_ov:postgres:${DB_PG_PASSWORD}
      - SFTP_USER=${BACKUP_SFTP_USER}
      - SFTP_PASSWORD=${BACKUP_SFTP_PASSWORD}
      - SFTP_HOST=${BACKUP_SFTP_HOST}
      - SFTP_PORT=${BACKUP_SFTP_PORT}
      - BACKUP_NAME=backup/${BACKUP_CLIENT}/db

volumes:
  db_ov_data:
  nginx_logs:
  base_certs:
  base_html:
  base_vhost:

networks:
  default:
    external:
      name: ev-ov 
  